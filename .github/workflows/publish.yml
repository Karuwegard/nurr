name: Publish semver tags to LuaRocks

on:
  repository_dispatch:
    types: [chunked_trigger]

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        env:
          CHUNK: ${{ github.event.client_payload }}
        run: |
          echo $CHUNK
          echo $CHUNK > chunk.json
          echo "MATRIX=$(cat ./chunk.json | tr -d '\n\r')" >> $GITHUB_OUTPUT

  publish:
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      fail-fast: false
      max-parallel: 10 # Don't DDOS the luarocks servers
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}

    steps:
      - name: Checkout plugin repository
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.plugins.name }}
          path: .
          fetch-tags: true
          fetch-depth: 0

      - name: Get latest Tag
        id: get-release
        run: |
          # Check for semver tags
          TAGS="$(git for-each-ref --sort=authordate --format '%(refname)' refs/tags )"
          if [[ -n "$TAGS" ]]; then
            echo "Found tags:"
            echo "$TAGS"
          fi
          TAG="$(git for-each-ref --sort=authordate --format '%(refname)' refs/tags | grep -P '[0-9]{1,}.[0-9]{1,}.[0-9]{1,}' | sed 's/refs\/tags\/\(.*\)/\1/' | tail -n1)"
          if [[ -n "$TAG" ]]; then
            echo "Found $TAG"
            git checkout $TAG
            VERSION=$(echo "$TAG" | sed 's/v\(.*\)/\1/')
            echo "RELEASE_VERSION=${VERSION}" >> $GITHUB_ENV
            echo "GITHUB_REF_TYPE_OVERRIDE=tag" >> $GITHUB_ENV
            echo "GITHUB_REF_NAME_OVERRIDE=$TAG" >> $GITHUB_ENV
            echo "GITHUB_REPOSITORY_OVERRIDE=${{ matrix.plugins.name }}" >> $GITHUB_ENV
          else
            echo "PUBLISHED_COUNT=NOTHING" >> $GITHUB_ENV
          fi

      - name: Install Lua
        if: ${{ env.RELEASE_VERSION != '' }}
        uses: leso-kn/gh-actions-lua@master
        with:
          luaVersion: "5.1"

      - name: Install Luarocks
        if: ${{ env.RELEASE_VERSION != '' }}
        uses: hishamhm/gh-actions-luarocks@master

      - name: Print plugin directories and environment
        if: ${{ env.RELEASE_VERSION != '' }}
        run: |
          ls -a
          printenv

      - if: ${{ env.RELEASE_VERSION != '' }}
        run: |
          echo "PUBLISHED_COUNT=$(luarocks --only-server=https://luarocks.org/manifests/neorocks search ${{ matrix.plugins.shorthand }} ${{ env.RELEASE_VERSION }} --porcelain | wc -l)" >> $GITHUB_ENV

      - name: Publish LuaRock
        uses: nvim-neorocks/luarocks-tag-release@v5
        if: ${{ env.PUBLISHED_COUNT == '0' }}
        env:
          LUAROCKS_API_KEY: ${{ secrets.LUAROCKS_API_KEY }}
        with:
          name: ${{ matrix.plugins.shorthand }}
          dependencies: ${{ matrix.plugins.dependencies }}
          version: ${{ env.RELEASE_VERSION }}
          summary: ${{ matrix.plugins.summary }}
          license: ${{ matrix.plugins.license }}
          labels: neovim
          test_interpreters: "" # Don't try to run busted tests
          extra_luarocks_args: |
            --namespace=neorocks
