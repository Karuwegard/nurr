name: Publish LuaRocks

on:
  push:
    branches:
      - 'main'
  schedule:
    # Runs every 4 hours
    - cron: "0 */4 * * *"
  workflow_dispatch:

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: echo "MATRIX=$(cat ./plugins.json | tr -d '\n\r')" >> $GITHUB_OUTPUT
  publish:
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}

    steps:
      - name: Checkout plugin repository
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.plugins.name }}
          path: .
          fetch-depth: "0"

      - name: Install Lua
        uses: leso-kn/gh-actions-lua@master
        with:
          luaVersion: "5.1"

      - name: Install Luarocks
        uses: hishamhm/gh-actions-luarocks@master

      - name: Print plugin directories and environment
        run: |
          ls -a
          printenv

      - name: Get latest Tag
        id: get-release
        run: |
          # Check for tags
          TAG=$(git describe --tags --abbrev=0 || echo)

          if [[ -n "$TAG" ]]; then
            echo "RELEASE_VERSION=${TAG}" >> $GITHUB_ENV
            echo "GITHUB_REF_TYPE_OVERRIDE=tag" >> $GITHUB_ENV
            echo "GITHUB_REF_NAME_OVERRIDE=$RELEASE_VERSION" >> $GITHUB_ENV
          fi

          echo "GITHUB_REPOSITORY_OVERRIDE=${{ matrix.plugins.name }}" >> $GITHUB_ENV
          echo "GITHUB_SHA_OVERRIDE=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Parse version from string
        id: version
        uses: release-kit/semver@v2
        with:
          string: ${{ env.RELEASE_VERSION }}

      - if: ${{ steps.version.outputs.full != '' }}
        run: |
          echo "PUBLISHED_COUNT=$(luarocks --only-server=https://luarocks.org/manifests/neorocks search ${{ matrix.plugins.shorthand }} ${{ steps.version.outputs.full }} --porcelain | wc -l)" >> $GITHUB_ENV

      - name: Publish LuaRock
        uses: nvim-neorocks/luarocks-tag-release@dev-version
        if: ${{ env.PUBLISHED_COUNT == 0 }}
        env:
          LUAROCKS_API_KEY: ${{ secrets.LUAROCKS_API_KEY }}
        with:
          name: ${{ matrix.plugins.shorthand }}
          dependencies: ${{ matrix.plugins.dependencies }}
          version: ${{ env.RELEASE_VERSION }}
          summary: ${{ matrix.plugins.summary }}
          license: ${{ matrix.plugins.license }}
          labels: neovim
          test_interpreters: "" # Don't try to run busted tests
          extra_luarocks_args: |
            --namespace=neorocks
