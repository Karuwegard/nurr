---
name: Publish tree-sitter parsers

on:
  push:
    branches:
      - 'main'
    paths:
      - tree-sitter-parsers.json
      - .github/workflows/publish-ts-parsers.yml
  workflow_dispatch:

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: echo "MATRIX=$(cat ./tree-sitter-parsers.json | tr -d '\n\r')" >> $GITHUB_OUTPUT

  publish:
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      fail-fast: false
      max-parallel: 10 # Don't DDOS the luarocks servers
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Clone parser repository
        run: |
          git clone --filter=blob:none "${{ matrix.parsers.install_info.url }}.git" && cd "$(basename "$_" .git)"
      - name: Get latest Tag
        id: get-release
        run: |
          # Check for semver tags
          TAGS="$(git for-each-ref --sort=authordate --format '%(refname)' refs/tags )"
          if [[ -n "$TAGS" ]]; then
            echo "Found tags:"
            echo "$TAGS"
          fi
          TAG="$(git for-each-ref --sort=authordate --format '%(refname)' refs/tags | sed 's/refs\/tags\/\(.*\)/\1/' | grep -P '^[v]*[0-9]{1,}.[0-9]{1,}.[0-9]{1,}' | tail -n1)"
          if [[ -z "$TAG" ]]; then
            # Try without patch
            TAG="$(git for-each-ref --sort=authordate --format '%(refname)' refs/tags | sed 's/refs\/tags\/\(.*\)/\1/' | grep -P '^[v]*[0-9]{1,}.[0-9]{1,}' | tail -n1)"
          fi
          if [[ -z "$TAG" ]]; then
            # Try without minor
            TAG="$(git for-each-ref --sort=authordate --format '%(refname)' refs/tags | sed 's/refs\/tags\/\(.*\)/\1/' | grep -P '^[v]*[0-9]{1,}' | tail -n1)"
          fi
          if [[ -n "$TAG" ]]; then
            echo "Found $TAG"
            git checkout $TAG
            VERSION=$(echo "$TAG" | sed 's/v\(.*\)/\1/')
            echo "RELEASE_VERSION=${VERSION}" >> $GITHUB_ENV
            echo "GITHUB_REF_TYPE_OVERRIDE=tag" >> $GITHUB_ENV
            echo "GITHUB_REF_NAME_OVERRIDE=$TAG" >> $GITHUB_ENV
            echo "GITHUB_REPOSITORY_OVERRIDE=${{ matrix.plugin.name }}" >> $GITHUB_ENV
          else
            echo "PUBLISHED_COUNT=NOTHING" >> $GITHUB_ENV
          fi

